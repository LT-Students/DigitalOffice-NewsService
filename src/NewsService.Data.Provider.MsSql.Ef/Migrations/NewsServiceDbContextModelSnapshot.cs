// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using System;

namespace LT.DigitalOffice.NewsService.Data.Provider.MsSql.Ef.Migrations
{
    [DbContext(typeof(NewsServiceDbContext))]
    partial class NewsServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbChangeSetDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NewsHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsHistoryId");

                    b.ToTable("ChangeSetDetails");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbNews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbNewsChangesHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangadAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ChangedBy")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("NewsChangesHistory");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbChangeSetDetails", b =>
                {
                    b.HasOne("LT.DigitalOffice.NewsService.Models.Db.DbNewsChangesHistory", "NewsHistory")
                        .WithMany("ChangeSetDetails")
                        .HasForeignKey("NewsHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsHistory");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbNewsChangesHistory", b =>
                {
                    b.HasOne("LT.DigitalOffice.NewsService.Models.Db.DbNews", "News")
                        .WithMany("NewsHistory")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbNews", b =>
                {
                    b.Navigation("NewsHistory");
                });

            modelBuilder.Entity("LT.DigitalOffice.NewsService.Models.Db.DbNewsChangesHistory", b =>
                {
                    b.Navigation("ChangeSetDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
